{"ast":null,"code":"import axios from\"axios\";const api=axios.create({baseURL:\"https://wep-app.onrender.com\",headers:{\"Content-Type\":\"application/json\"}});// Додаємо accessToken до заголовків\napi.interceptors.request.use(config=>{const token=localStorage.getItem(\"accessToken\");if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Обробка 401 помилок і оновлення токена\nlet isRefreshing=false;let refreshSubscribers=[];const processQueue=function(error){let token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;refreshSubscribers.forEach(callback=>callback(token));refreshSubscribers=[];};api.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){if(!isRefreshing){isRefreshing=true;originalRequest._retry=true;const refreshToken=localStorage.getItem(\"refreshToken\");if(!refreshToken){console.error(\"No refresh token available\");localStorage.removeItem(\"accessToken\");localStorage.removeItem(\"refreshToken\");window.location.href=\"/login\";return Promise.reject(error);}try{const response=await axios.post(`${api.defaults.baseURL}/api/token/refresh/`,{refresh:refreshToken});const{access}=response.data;localStorage.setItem(\"accessToken\",access);processQueue(null,access);originalRequest.headers.Authorization=`Bearer ${access}`;return api(originalRequest);}catch(refreshError){console.error(\"Failed to refresh token:\",refreshError);localStorage.removeItem(\"accessToken\");localStorage.removeItem(\"refreshToken\");window.location.href=\"/login\";return Promise.reject(refreshError);}finally{isRefreshing=false;}}else{// Якщо оновлення вже в процесі, додаємо запит у чергу\nreturn new Promise(resolve=>{refreshSubscribers.push(token=>{originalRequest.headers.Authorization=`Bearer ${token}`;resolve(api(originalRequest));});});}}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","isRefreshing","refreshSubscribers","processQueue","error","arguments","length","undefined","forEach","callback","response","_error$response","originalRequest","status","_retry","refreshToken","console","removeItem","window","location","href","Promise","reject","post","defaults","refresh","access","data","setItem","refreshError","resolve","push"],"sources":["D:/KPI/5_course/Web-app/UI_programming/todo-list-app/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://wep-app.onrender.com\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Додаємо accessToken до заголовків\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Обробка 401 помилок і оновлення токена\r\nlet isRefreshing = false;\r\nlet refreshSubscribers = [];\r\n\r\nconst processQueue = (error, token = null) => {\r\n  refreshSubscribers.forEach((callback) => callback(token));\r\n  refreshSubscribers = [];\r\n};\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n        originalRequest._retry = true;\r\n\r\n        const refreshToken = localStorage.getItem(\"refreshToken\");\r\n        if (!refreshToken) {\r\n          console.error(\"No refresh token available\");\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          window.location.href = \"/login\";\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        try {\r\n          const response = await axios.post(\r\n            `${api.defaults.baseURL}/api/token/refresh/`,\r\n            {\r\n              refresh: refreshToken,\r\n            }\r\n          );\r\n          const { access } = response.data;\r\n          localStorage.setItem(\"accessToken\", access);\r\n          processQueue(null, access);\r\n\r\n          originalRequest.headers.Authorization = `Bearer ${access}`;\r\n          return api(originalRequest);\r\n        } catch (refreshError) {\r\n          console.error(\"Failed to refresh token:\", refreshError);\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          window.location.href = \"/login\";\r\n          return Promise.reject(refreshError);\r\n        } finally {\r\n          isRefreshing = false;\r\n        }\r\n      } else {\r\n        // Якщо оновлення вже в процесі, додаємо запит у чергу\r\n        return new Promise((resolve) => {\r\n          refreshSubscribers.push((token) => {\r\n            originalRequest.headers.Authorization = `Bearer ${token}`;\r\n            resolve(api(originalRequest));\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}