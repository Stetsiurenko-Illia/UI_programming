{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"https://wep-app.onrender.com\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Додаємо accessToken до заголовків\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Обробка 401 помилок і оновлення токена\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true; // Запобігаємо зацикленню\n    try {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      if (!refreshToken) {\n        throw new Error(\"No refresh token available\");\n      }\n      const response = await axios.post(\"https://wep-app.onrender.com/api/refresh/\", {\n        refresh: refreshToken\n      });\n      const {\n        access\n      } = response.data;\n      localStorage.setItem(\"accessToken\", access);\n      console.log(\"Token refreshed:\", access); // Для відладки\n      originalRequest.headers.Authorization = `Bearer ${access}`;\n      return api(originalRequest); // Повторюємо оригінальний запит\n    } catch (err) {\n      console.error(\"Failed to refresh token:\", err);\n      // Якщо оновлення не вдалося, перенаправляємо на логін\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n      window.location.href = \"/login\";\n      return Promise.reject(err);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","originalRequest","status","_retry","refreshToken","Error","post","refresh","access","data","setItem","console","log","err","removeItem","window","location","href","Promise","reject"],"sources":["D:/KPI/5_course/Web-app/todo-list-app/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://wep-app.onrender.com\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Додаємо accessToken до заголовків\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Обробка 401 помилок і оновлення токена\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true; // Запобігаємо зацикленню\r\n      try {\r\n        const refreshToken = localStorage.getItem(\"refreshToken\");\r\n        if (!refreshToken) {\r\n          throw new Error(\"No refresh token available\");\r\n        }\r\n        const response = await axios.post(\r\n          \"https://wep-app.onrender.com/api/refresh/\",\r\n          {\r\n            refresh: refreshToken,\r\n          }\r\n        );\r\n        const { access } = response.data;\r\n        localStorage.setItem(\"accessToken\", access);\r\n        console.log(\"Token refreshed:\", access); // Для відладки\r\n        originalRequest.headers.Authorization = `Bearer ${access}`;\r\n        return api(originalRequest); // Повторюємо оригінальний запит\r\n      } catch (err) {\r\n        console.error(\"Failed to refresh token:\", err);\r\n        // Якщо оновлення не вдалося, перенаправляємо на логін\r\n        localStorage.removeItem(\"accessToken\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        window.location.href = \"/login\";\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACtB,MAAOC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,MAAMC,eAAe,GAAGF,KAAK,CAACN,MAAM;EACpC,IAAI,EAAAO,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI,CAAC,CAAC;IAC/B,IAAI;MACF,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACQ,YAAY,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMP,QAAQ,GAAG,MAAMb,KAAK,CAACqB,IAAI,CAC/B,2CAA2C,EAC3C;QACEC,OAAO,EAAEH;MACX,CACF,CAAC;MACD,MAAM;QAAEI;MAAO,CAAC,GAAGV,QAAQ,CAACW,IAAI;MAChCd,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEF,MAAM,CAAC;MAC3CG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,MAAM,CAAC,CAAC,CAAC;MACzCP,eAAe,CAACZ,OAAO,CAACQ,aAAa,GAAG,UAAUW,MAAM,EAAE;MAC1D,OAAOtB,GAAG,CAACe,eAAe,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZF,OAAO,CAACZ,KAAK,CAAC,0BAA0B,EAAEc,GAAG,CAAC;MAC9C;MACAlB,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;MACtCnB,YAAY,CAACmB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOC,OAAO,CAACC,MAAM,CAACN,GAAG,CAAC;IAC5B;EACF;EACA,OAAOK,OAAO,CAACC,MAAM,CAACpB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}