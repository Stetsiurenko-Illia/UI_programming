{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8000/\"\n});\n\n// Функція для оновлення токена\nconst refreshAccessToken = async () => {\n  try {\n    const refresh = localStorage.getItem(\"refreshToken\");\n    if (!refresh) throw new Error(\"Refresh token відсутній\");\n    const response = await axios.post(\"https://wep-app.onrender.com/api/token/refresh/\", {\n      refresh\n    });\n    const newAccessToken = response.data.access;\n    localStorage.setItem(\"accessToken\", newAccessToken);\n    console.log(\"Токен оновлено:\", newAccessToken);\n    return newAccessToken;\n  } catch (err) {\n    console.error(\"Не вдалося оновити токен:\", err.response ? err.response.data : err.message);\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    window.location.href = \"/\"; // Перенаправлення на Welcome при невдалому оновленні\n    throw err;\n  }\n};\n\n// Перехоплювач запитів\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Перехоплювач відповідей\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true; // Позначка, щоб уникнути зациклення\n    try {\n      const newAccessToken = await refreshAccessToken();\n      originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n      return api(originalRequest); // Повторюємо оригінальний запит із новим токеном\n    } catch (refreshError) {\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","refreshAccessToken","refresh","localStorage","getItem","Error","response","post","newAccessToken","data","access","setItem","console","log","err","error","message","removeItem","window","location","href","interceptors","request","use","config","token","headers","Authorization","Promise","reject","_error$response","originalRequest","status","_retry","refreshError"],"sources":["D:/KPI/5_course/Web-app/todo-list-app/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:8000/\",\r\n});\r\n\r\n// Функція для оновлення токена\r\nconst refreshAccessToken = async () => {\r\n  try {\r\n    const refresh = localStorage.getItem(\"refreshToken\");\r\n    if (!refresh) throw new Error(\"Refresh token відсутній\");\r\n\r\n    const response = await axios.post(\r\n      \"https://wep-app.onrender.com/api/token/refresh/\",\r\n      {\r\n        refresh,\r\n      }\r\n    );\r\n    const newAccessToken = response.data.access;\r\n    localStorage.setItem(\"accessToken\", newAccessToken);\r\n    console.log(\"Токен оновлено:\", newAccessToken);\r\n    return newAccessToken;\r\n  } catch (err) {\r\n    console.error(\r\n      \"Не вдалося оновити токен:\",\r\n      err.response ? err.response.data : err.message\r\n    );\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    window.location.href = \"/\"; // Перенаправлення на Welcome при невдалому оновленні\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Перехоплювач запитів\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Перехоплювач відповідей\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true; // Позначка, щоб уникнути зациклення\r\n      try {\r\n        const newAccessToken = await refreshAccessToken();\r\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n        return api(originalRequest); // Повторюємо оригінальний запит із новим токеном\r\n      } catch (refreshError) {\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACpD,IAAI,CAACF,OAAO,EAAE,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;IAExD,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,iDAAiD,EACjD;MACEL;IACF,CACF,CAAC;IACD,MAAMM,cAAc,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM;IAC3CP,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEH,cAAc,CAAC;IACnDI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,cAAc,CAAC;IAC9C,OAAOA,cAAc;EACvB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CACX,2BAA2B,EAC3BD,GAAG,CAACR,QAAQ,GAAGQ,GAAG,CAACR,QAAQ,CAACG,IAAI,GAAGK,GAAG,CAACE,OACzC,CAAC;IACDb,YAAY,CAACc,UAAU,CAAC,aAAa,CAAC;IACtCd,YAAY,CAACc,UAAU,CAAC,cAAc,CAAC;IACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;IAC5B,MAAMN,GAAG;EACX;AACF,CAAC;;AAED;AACAhB,GAAG,CAACuB,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGtB,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIqB,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAT,KAAK,IAAKa,OAAO,CAACC,MAAM,CAACd,KAAK,CACjC,CAAC;;AAED;AACAjB,GAAG,CAACuB,YAAY,CAACf,QAAQ,CAACiB,GAAG,CAC1BjB,QAAQ,IAAKA,QAAQ,EACtB,MAAOS,KAAK,IAAK;EAAA,IAAAe,eAAA;EACf,MAAMC,eAAe,GAAGhB,KAAK,CAACS,MAAM;EACpC,IAAI,EAAAM,eAAA,GAAAf,KAAK,CAACT,QAAQ,cAAAwB,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI,CAAC,CAAC;IAC/B,IAAI;MACF,MAAMzB,cAAc,GAAG,MAAMP,kBAAkB,CAAC,CAAC;MACjD8B,eAAe,CAACL,OAAO,CAACC,aAAa,GAAG,UAAUnB,cAAc,EAAE;MAClE,OAAOV,GAAG,CAACiC,eAAe,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOG,YAAY,EAAE;MACrB,OAAON,OAAO,CAACC,MAAM,CAACK,YAAY,CAAC;IACrC;EACF;EACA,OAAON,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}