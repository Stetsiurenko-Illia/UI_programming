{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"https://wep-app.onrender.com\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Додаємо accessToken до заголовків\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Обробка 401 помилок і оновлення токена\nlet isRefreshing = false;\nlet refreshSubscribers = [];\nconst processQueue = (error, token = null) => {\n  refreshSubscribers.forEach(callback => callback(token));\n  refreshSubscribers = [];\n};\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    if (!isRefreshing) {\n      isRefreshing = true;\n      originalRequest._retry = true;\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      if (!refreshToken) {\n        console.error(\"No refresh token available\");\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        window.location.href = \"/login\";\n        return Promise.reject(error);\n      }\n      try {\n        const response = await axios.post(`${api.defaults.baseURL}/api/token/refresh/`, {\n          refresh: refreshToken\n        });\n        const {\n          access\n        } = response.data;\n        localStorage.setItem(\"accessToken\", access);\n        console.log(\"Token refreshed:\", access);\n\n        // Оновлюємо всі відкладені запити\n        processQueue(null, access);\n\n        // Повторюємо оригінальний запит із новим токеном\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Failed to refresh token:\", refreshError);\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        window.location.href = \"/login\";\n        return Promise.reject(refreshError);\n      } finally {\n        isRefreshing = false;\n      }\n    } else {\n      // Якщо оновлення вже в процесі, додаємо запит у чергу\n      return new Promise(resolve => {\n        refreshSubscribers.push(token => {\n          originalRequest.headers.Authorization = `Bearer ${token}`;\n          resolve(api(originalRequest));\n        });\n      });\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","isRefreshing","refreshSubscribers","processQueue","error","forEach","callback","response","_error$response","originalRequest","status","_retry","refreshToken","console","removeItem","window","location","href","Promise","reject","post","defaults","refresh","access","data","setItem","log","refreshError","resolve","push"],"sources":["D:/KPI/5_course/Web-app/todo-list-app/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://wep-app.onrender.com\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Додаємо accessToken до заголовків\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Обробка 401 помилок і оновлення токена\r\nlet isRefreshing = false;\r\nlet refreshSubscribers = [];\r\n\r\nconst processQueue = (error, token = null) => {\r\n  refreshSubscribers.forEach((callback) => callback(token));\r\n  refreshSubscribers = [];\r\n};\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n        originalRequest._retry = true;\r\n\r\n        const refreshToken = localStorage.getItem(\"refreshToken\");\r\n        if (!refreshToken) {\r\n          console.error(\"No refresh token available\");\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          window.location.href = \"/login\";\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        try {\r\n          const response = await axios.post(\r\n            `${api.defaults.baseURL}/api/token/refresh/`,\r\n            {\r\n              refresh: refreshToken,\r\n            }\r\n          );\r\n          const { access } = response.data;\r\n          localStorage.setItem(\"accessToken\", access);\r\n          console.log(\"Token refreshed:\", access);\r\n\r\n          // Оновлюємо всі відкладені запити\r\n          processQueue(null, access);\r\n\r\n          // Повторюємо оригінальний запит із новим токеном\r\n          originalRequest.headers.Authorization = `Bearer ${access}`;\r\n          return api(originalRequest);\r\n        } catch (refreshError) {\r\n          console.error(\"Failed to refresh token:\", refreshError);\r\n          localStorage.removeItem(\"accessToken\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          window.location.href = \"/login\";\r\n          return Promise.reject(refreshError);\r\n        } finally {\r\n          isRefreshing = false;\r\n        }\r\n      } else {\r\n        // Якщо оновлення вже в процесі, додаємо запит у чергу\r\n        return new Promise((resolve) => {\r\n          refreshSubscribers.push((token) => {\r\n            originalRequest.headers.Authorization = `Bearer ${token}`;\r\n            resolve(api(originalRequest));\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,IAAIK,YAAY,GAAG,KAAK;AACxB,IAAIC,kBAAkB,GAAG,EAAE;AAE3B,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEP,KAAK,GAAG,IAAI,KAAK;EAC5CK,kBAAkB,CAACG,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAACT,KAAK,CAAC,CAAC;EACzDK,kBAAkB,GAAG,EAAE;AACzB,CAAC;AAEDb,GAAG,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC1BY,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACR,MAAM;EACpC,IAAI,EAAAY,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7D,IAAI,CAACV,YAAY,EAAE;MACjBA,YAAY,GAAG,IAAI;MACnBQ,eAAe,CAACE,MAAM,GAAG,IAAI;MAE7B,MAAMC,YAAY,GAAGd,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACa,YAAY,EAAE;QACjBC,OAAO,CAACT,KAAK,CAAC,4BAA4B,CAAC;QAC3CN,YAAY,CAACgB,UAAU,CAAC,aAAa,CAAC;QACtChB,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;QACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B,OAAOC,OAAO,CAACC,MAAM,CAACf,KAAK,CAAC;MAC9B;MAEA,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMnB,KAAK,CAACgC,IAAI,CAC/B,GAAG/B,GAAG,CAACgC,QAAQ,CAAC9B,OAAO,qBAAqB,EAC5C;UACE+B,OAAO,EAAEV;QACX,CACF,CAAC;QACD,MAAM;UAAEW;QAAO,CAAC,GAAGhB,QAAQ,CAACiB,IAAI;QAChC1B,YAAY,CAAC2B,OAAO,CAAC,aAAa,EAAEF,MAAM,CAAC;QAC3CV,OAAO,CAACa,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAAC;;QAEvC;QACApB,YAAY,CAAC,IAAI,EAAEoB,MAAM,CAAC;;QAE1B;QACAd,eAAe,CAACjB,OAAO,CAACQ,aAAa,GAAG,UAAUuB,MAAM,EAAE;QAC1D,OAAOlC,GAAG,CAACoB,eAAe,CAAC;MAC7B,CAAC,CAAC,OAAOkB,YAAY,EAAE;QACrBd,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEuB,YAAY,CAAC;QACvD7B,YAAY,CAACgB,UAAU,CAAC,aAAa,CAAC;QACtChB,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;QACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B,OAAOC,OAAO,CAACC,MAAM,CAACQ,YAAY,CAAC;MACrC,CAAC,SAAS;QACR1B,YAAY,GAAG,KAAK;MACtB;IACF,CAAC,MAAM;MACL;MACA,OAAO,IAAIiB,OAAO,CAAEU,OAAO,IAAK;QAC9B1B,kBAAkB,CAAC2B,IAAI,CAAEhC,KAAK,IAAK;UACjCY,eAAe,CAACjB,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;UACzD+B,OAAO,CAACvC,GAAG,CAACoB,eAAe,CAAC,CAAC;QAC/B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF;EACA,OAAOS,OAAO,CAACC,MAAM,CAACf,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}